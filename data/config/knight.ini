; A knight character to move around the world
[Knight]
Position     = (0, 0, 0)
AnimationSet = KnightAnimationSet
Body         = KnightBody
; General specs
RunSpeed     = 100
DashSpeed    = 550
DashDuration = 0.15
HurtSpeed    = 200
HurtDuration = 0.1
; Custom input set for this object
Input        = KnightInput
Pivot        = bottom
Scale        = 10

; This defines the inputs which apply to the Knight object
[KnightInput]
JoyIDList    = 1
KEY_UP       = Up
KEY_DOWN     = Down
KEY_LEFT     = Left
KEY_RIGHT    = Right
KEY_SPACE    = Dash
-JOY_LX      = Left
+JOY_LX      = Right
-JOY_LY      = Up
+JOY_LY      = Down
JOY_A        = Dash

; Our knight's physics body is dynamic so it can move but its rotation stays
; fixed so that we don't have physics behaviors leading to our knight walking
; around at an odd angle.
[KnightBody]
Dynamic = true
FixedRotation = true
PartList = KnightFullBodyPart # KnightFootBodyPart

[KnightFullBodyPart]
Type = box
Solid = false
SelfFlags = dynamic
CheckMask = pickup # barrier
TopLeft   = (-6, -18)
BottomRight = (6, 0)

; The collision body in this case is limited to an area toward the knight's
; feet. This means that the knight can visually overlap with barriers.
; Using a sphere - in practice a circle - here makes movement around barrier
; edges feel relatively smooth.
[KnightFootBodyPart]
Type = sphere
Solid = true
SelfFlags = dynamic
CheckMask = barrier
Center = (0, -4)
Radius = 4

; Animation

[KnightAnimationSet]
Pivot = bottom
Texture = knight_.png
FrameSize = (24, 24)
Prefix = Knight

StartAnim = IdleLeft

; Animations
IdleLeft  = 4
JumpLeft  = 4
RunLeft   = 4
TurnLeft  = 4
HurtLeft  = 4
DownLeft  = 4
LieLeft   = 1
UpLeft    = 4
IdleRight = 4
JumpRight = 4
RunRight  = 4
TurnRight = 4
HurtRight = 4
DownRight = 4
LieRight  = 1
UpRight   = 4

; Transitions
IdleLeft->  = IdleLeft #
              .TurnLeft #
              .JumpLeft #
              .RunLeft #
              .HurtLeft #
              .DownLeft
JumpLeft->  = JumpLeft #
              .IdleLeft
RunLeft->   = RunLeft #
              .IdleLeft
HurtLeft->  = !IdleLeft
TurnLeft->  = IdleRight
DownLeft->  = LieLeft
LieLeft->   = LieLeft #
              UpLeft
UpLeft->    = IdleLeft

IdleRight-> = IdleRight #
              .TurnRight #
              .JumpRight #
              .RunRight #
              .HurtRight #
              .DownRight
JumpRight-> = JumpRight #
              .IdleRight
RunRight->  = RunRight #
              .IdleRight
HurtRight-> = !IdleRight
TurnRight-> = IdleLeft
DownRight-> = LieRight
LieRight->  = LieRight #
              UpRight
UpRight->   = IdleRight

[KnightIdleLeft]
KeyDuration = 0.1
TextureOrigin = (96, 0)

[KnightJumpLeft]
KeyDuration = 0.1
TextureOrigin = (96, 24)

[KnightRunLeft]
KeyDuration = 0.1
TextureOrigin = (96, 48)

[KnightTurnLeft]
KeyDuration = 0.05
TextureOrigin = (96, 72)

[KnightHurtLeft]
KeyDuration = 0.05
TextureOrigin = (96, 96)

[KnightDownLeft]
KeyDuration = 0.2
TextureOrigin = (96, 120)

[KnightLieLeft]
KeyDuration = 0.2
TextureOrigin = (168, 120)

[KnightUpLeft]
KeyDuration = 0.2
TextureOrigin = (96, 120)
TextureSize = (96, 24)
Direction = left # up

[KnightIdleRight]
KeyDuration = 0.1
TextureOrigin = (0, 0)

[KnightJumpRight]
KeyDuration = 0.1
TextureOrigin = (0, 24)

[KnightRunRight]
KeyDuration = 0.1
TextureOrigin = (0, 48)

[KnightTurnRight]
KeyDuration = 0.05
TextureOrigin = (0, 72)

[KnightHurtRight]
KeyDuration = 0.05
TextureOrigin = (0, 96)

[KnightDownRight]
KeyDuration = 0.2
TextureOrigin = (0, 120)

[KnightLieRight]
KeyDuration = 0.2
TextureOrigin = (72, 120)

[KnightUpRight]
KeyDuration = 0.2
TextureOrigin = (0, 120)
TextureSize = (96, 24)
Direction = left # down
